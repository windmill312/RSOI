Микросервисная архитектура
1. Eureka - service discovery для того чтобы все сервисы динамически узнавали урлы друг друга (Ribbon ???) (client descovery)
2. Мониторинг сервисов, трассировка запросов => Zippkin от Twitter (в стандартной реализации сппринг отправляет туда только 10% запросов чтобы не перегрузить)
3. ElasticSearch + какой то еще стек технологий (елк стек) (аггрегатор логов)
4. wrk простая технология для нагрузки систем
5. Histrix - ??? turbine ???

CDD - consumer drive and development

Для того чтобы серивисы знали о структурах данных других сервисов исп.отдельная либа, которая хранит эти dto.
Все сервисы ее подтягивают

Тестирование
1. Тесты необходимо делить строго по уровням: апи, бизнес логика, база данных
2. Benchmark - тестирование с прогревом JMH?? GMH??

JIT ...
JNI - ??????? для работы с разными языками??
Ну и JNDI повтори)

На фронте парсить запрос редиректа, выдавать формочку, сохранить редирект и после авторизации,
если в логинреквест заполнен serviceUuid, то понимаем, что это оаус и ответ редирект туда откуда пришел запрос
Добавить в параметры запросов от гейтвея сикреткей, а на каждом сервисе хранить его локально